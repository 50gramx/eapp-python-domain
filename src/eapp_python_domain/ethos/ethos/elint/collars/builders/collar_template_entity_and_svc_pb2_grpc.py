# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc



class DC49999XXXXEPME5000CapabilitiesStub(object):
    """-------------------------------------------------------
    gRPC Service Definition
    -------------------------------------------------------

    TODO: replace with collar code and entity services
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class DC49999XXXXEPME5000CapabilitiesServicer(object):
    """-------------------------------------------------------
    gRPC Service Definition
    -------------------------------------------------------

    TODO: replace with collar code and entity services
    """


def add_DC49999XXXXEPME5000CapabilitiesServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.collars.DC49999XXXXEPME5000Capabilities', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DC49999XXXXEPME5000Capabilities(object):
    """-------------------------------------------------------
    gRPC Service Definition
    -------------------------------------------------------

    TODO: replace with collar code and entity services
    """


class DC49999XXXXEPME5001CapabilitiesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class DC49999XXXXEPME5001CapabilitiesServicer(object):
    """Missing associated documentation comment in .proto file."""


def add_DC49999XXXXEPME5001CapabilitiesServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.collars.DC49999XXXXEPME5001Capabilities', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DC49999XXXXEPME5001Capabilities(object):
    """Missing associated documentation comment in .proto file."""


class DC49999XXXXEPME5002CapabilitiesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class DC49999XXXXEPME5002CapabilitiesServicer(object):
    """Missing associated documentation comment in .proto file."""


def add_DC49999XXXXEPME5002CapabilitiesServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.collars.DC49999XXXXEPME5002Capabilities', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DC49999XXXXEPME5002Capabilities(object):
    """Missing associated documentation comment in .proto file."""
