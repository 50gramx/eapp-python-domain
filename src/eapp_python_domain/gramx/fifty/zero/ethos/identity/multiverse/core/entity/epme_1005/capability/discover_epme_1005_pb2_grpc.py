# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gramx.fifty.zero.ethos.identity.multiverse.core.entity.epme_1005 import contract_pb2 as gramx_dot_fifty_dot_zero_dot_ethos_dot_identity_dot_multiverse_dot_core_dot_entity_dot_epme__1005_dot_contract__pb2
from gramx.seventy.zero.ethos.gramxpro.multiverse.core.entity.epe_1001 import contract_pb2 as gramx_dot_seventy_dot_zero_dot_ethos_dot_gramxpro_dot_multiverse_dot_core_dot_entity_dot_epe__1001_dot_contract__pb2


class DiscoverEPME1005Stub(object):
    """TODO: File options

    TODO: Everything else

    Service Definitions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EPMCC2101 = channel.stream_stream(
                '/gramx.fifty.zero.ethos.identity.multiverse.core.entity.epme_1005.capability.context.discover.DiscoverEPME1005/EPMCC2101',
                request_serializer=gramx_dot_fifty_dot_zero_dot_ethos_dot_identity_dot_multiverse_dot_core_dot_entity_dot_epme__1005_dot_contract__pb2.EPME1005.SerializeToString,
                response_deserializer=gramx_dot_seventy_dot_zero_dot_ethos_dot_gramxpro_dot_multiverse_dot_core_dot_entity_dot_epe__1001_dot_contract__pb2.EPE1001.FromString,
                )


class DiscoverEPME1005Servicer(object):
    """TODO: File options

    TODO: Everything else

    Service Definitions
    """

    def EPMCC2101(self, request_iterator, context):
        """Is Account Assistant Name Exists
        Checks the existence of an account assistant based on its name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscoverEPME1005Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EPMCC2101': grpc.stream_stream_rpc_method_handler(
                    servicer.EPMCC2101,
                    request_deserializer=gramx_dot_fifty_dot_zero_dot_ethos_dot_identity_dot_multiverse_dot_core_dot_entity_dot_epme__1005_dot_contract__pb2.EPME1005.FromString,
                    response_serializer=gramx_dot_seventy_dot_zero_dot_ethos_dot_gramxpro_dot_multiverse_dot_core_dot_entity_dot_epe__1001_dot_contract__pb2.EPE1001.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gramx.fifty.zero.ethos.identity.multiverse.core.entity.epme_1005.capability.context.discover.DiscoverEPME1005', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DiscoverEPME1005(object):
    """TODO: File options

    TODO: Everything else

    Service Definitions
    """

    @staticmethod
    def EPMCC2101(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/gramx.fifty.zero.ethos.identity.multiverse.core.entity.epme_1005.capability.context.discover.DiscoverEPME1005/EPMCC2101',
            gramx_dot_fifty_dot_zero_dot_ethos_dot_identity_dot_multiverse_dot_core_dot_entity_dot_epme__1005_dot_contract__pb2.EPME1005.SerializeToString,
            gramx_dot_seventy_dot_zero_dot_ethos_dot_gramxpro_dot_multiverse_dot_core_dot_entity_dot_epe__1001_dot_contract__pb2.EPE1001.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
